{"version":3,"sources":["utils.ts","logo.svg","AddToHomescreen.tsx","App.js","reportWebVitals.js","index.js"],"names":["OsName","BrowserName","Utils","value","undefined","window","matchMedia","matches","userAgent","navigator","platform","userAgentData","test","Android","Ipad","Iphone","Blackberry","Windows","Mac","Linux","Unknown","Edge","Boolean","opr","Opera","SamsungInternet","brands","some","b","brand","Chrome","Vivaldi","Yandex","Firefox","Safari","InternetExplorer","chrome","Chromium","str","values","replace","match","group1","String","depth","MAX_DEPTH","constructor","name","this","format","map","v","print","join","valuesString","Array","from","document","keys","Object","entries","getOwnPropertyDescriptors","filter","enumerable","k","prototype","flat","entriesString","showNativeInstallPromptIfExists","a","isValueMissing","nativeInstallPrompt","deferredInstallPrompt","prompt","userChoice","outcome","addEventListener","event","alert","preventDefault","AddToHomescreen","defaultData","getShouldShowAdvert","getAdvert","getGuidancePrompt","forceShowAdvert","_data","useMemo","__data","localStorage","getItem","_parsed_data","JSON","parse","version","error","shouldIncrementPageVisits","useState","pageVisits","data","setData","shouldShowAdvert","setShouldShowAdvert","useEffect","console","log","setItem","stringify","useAddToHomeScreenData","nativePrompt","setNativePrompt","guidancePromptCloseCallback","useCallback","setShouldShowGuidancePrompt","guidancePrompt","canShowPrompt","setCanShowPrompt","setTimeout","standalone","newNativePrompt","canShowNativePrompt","canShowGuidancePrompt","shouldShowGuidancePrompt","advertYesCallback","asyncCallback","dismissCount","advertNoCallback","App","flags","isDesktop","flagsSet","Set","flag","className","src","logo","alt","getOsName","getBrowserName","style","display","gap","Button","variant","color","onClick","location","href","removeItem","onYes","onNo","boxSizing","position","bottom","width","justifyContent","padding","background","alignItems","IconButton","onClose","Dialog","open","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gJAaYA,EAUAC,E,wECvBG,MAA0B,iC,0CDa7BD,K,kBAAAA,E,YAAAA,E,gBAAAA,E,wBAAAA,E,kBAAAA,E,UAAAA,E,cAAAA,E,mBAAAA,M,cAUAC,K,YAAAA,E,cAAAA,E,mCAAAA,E,gBAAAA,E,kBAAAA,E,gBAAAA,E,kBAAAA,E,gBAAAA,E,qCAAAA,E,oBAAAA,E,mBAAAA,M,SAcNC,E,mGACF,SAA6BC,GACzB,YAAkBC,IAAVD,GAAmC,OAAVA,I,uBAIrC,WACI,OAAOE,OAAOC,WAAW,sCAAsCC,U,uBAEnE,WAAmC,IAAD,EACxBC,EAAYH,OAAOI,UAAUD,UAC7BE,GAAW,UAAAL,OAAOI,UAAUE,qBAAjB,eAAgCD,WAAYL,OAAOI,UAAUC,SAC9E,QAAQ,GACJ,IAAK,WAAWE,KAAKJ,GACjB,OAAOR,EAAOa,QAClB,IAAK,QAAQD,KAAKJ,IAAc,QAAQI,KAAKF,GACzC,OAAOV,EAAOc,KAClB,IAAK,eAAeF,KAAKJ,IAAc,eAAeI,KAAKF,GACvD,OAAOV,EAAOe,OAClB,IAAK,cAAcH,KAAKJ,GACpB,OAAOR,EAAOgB,WAClB,IAAK,6BAA6BJ,KAAKF,GACnC,OAAOV,EAAOiB,QAClB,IAAK,2CAA2CL,KAAKF,GACjD,OAAOV,EAAOkB,IAClB,IAAK,SAASN,KAAKF,GACf,OAAOV,EAAOmB,MAClB,QACI,OAAOnB,EAAOoB,W,4BAG1B,WAA6C,IAAD,IAClCZ,EAAYH,OAAOI,UAAUD,UACnC,QAAQ,GACJ,IAAK,mBAAmBI,KAAKJ,GACzB,OAAOP,EAAYoB,KACvB,IAAK,aAAaT,KAAKJ,IAAcc,QAAQjB,OAAOkB,KAChD,OAAOtB,EAAYuB,MACvB,IAAK,kBAAkBZ,KAAKJ,GACxB,OAAOP,EAAYwB,gBACvB,IAAK,SAASb,KAAKJ,GACnB,IAAK,UAAUI,KAAKJ,KAAc,oBAACC,UAAUE,qBAAX,aAAC,EAAyBe,cAA1B,QAAoC,IAAIC,MAAK,SAAAC,GAAC,MAAgB,kBAAZA,EAAEC,SAClF,OAAO5B,EAAY6B,OACvB,IAAK,WAAWlB,KAAKJ,GACjB,OAAOP,EAAY8B,QACvB,IAAK,aAAanB,KAAKJ,GACnB,OAAOP,EAAY+B,OACvB,IAAK,iBAAiBpB,KAAKJ,GACvB,OAAOP,EAAYgC,QACvB,IAAK,UAAUrB,KAAKJ,GAChB,OAAOP,EAAYiC,OACvB,IAAK,mCAAmCtB,KAAKJ,GACzC,OAAOP,EAAYkC,iBACvB,KAAKb,QAAQjB,OAAO+B,QAChB,OAAOnC,EAAYoC,SACvB,QACI,OAAOpC,EAAYmB,W,oBAK/B,SAAqBkB,EAAaC,GAC9B,OAAOD,EAAIE,QAAQ,WAAW,SAACC,EAAeC,GAAoB,IAAD,EAC7D,OAAOC,OAAM,iBAACJ,QAAD,IAACA,OAAD,EAACA,GAAUG,UAAX,QAAsB,S,mBAG3C,SAAoBvC,GAAgC,IAAD,aAAnByC,EAAmB,uDAAX,EAC9BC,EAAY,EAClB,cAAQ1C,QAAR,IAAQA,GAAR,UAAQA,EAAO2C,mBAAf,aAAQ,EAAoBC,MACxB,IAAK,SACD,OAAOC,KAAKC,OAAO,OAAU,CAAC9C,IAClC,IAAK,SACL,IAAK,UACL,UAAKC,EACD,OAAOuC,OAAOxC,GAClB,IAAK,QACD,OAAIyC,GAASC,EAAkB,QACxBG,KAAKC,OAAO,OAAQ,CAAC9C,EAAM+C,KAAI,SAACC,GAAD,OAAY,EAAKC,MAAMD,EAAGP,EAAM,MAAIS,KAAK,QACnF,IAAK,MACD,GAAIT,GAASC,EAAW,MAAO,QAC/B,IAAMS,EAAeC,MAAMC,KAAKrD,GAAmB+C,KAAI,SAAAC,GAAC,OAAI,EAAKC,MAAMD,EAAGP,EAAM,MAAIS,KAAK,MACzF,OAAOL,KAAKC,OAAO,OAAQ,CAACK,IAChC,QACI,GAAIV,GAASC,GAAa1C,IAAUE,QAAUF,IAAUsD,SAAU,MAAO,QACzE,IAAMC,EAAO,sBACNC,OAAOC,QAAQD,OAAOE,0BAA0B1D,IAAQ2D,QAAO,oDAAcC,cAAYb,KAAI,mCAAEc,EAAF,iBAAYA,MADnG,YAENL,OAAOC,QAAQD,OAAOE,0BAAP,oBAAiC1D,EAAM2C,mBAAvC,aAAiC,EAAmBmB,iBAApD,QAAiE,KAAKH,QAAO,oDAAcC,cAAYb,KAAI,mCAAEc,EAAF,iBAAYA,OAC3IE,OACIC,EAAgBT,EAAKR,KAAI,SAACc,GAAD,OAAO,EAAKf,OAAO,SAAU,CAAC,EAAKG,MAAMY,EAAGpB,EAAM,GAAI,EAAKQ,MAAMjD,EAAM6D,GAAIpB,EAAM,QAAMS,KAAK,MAC3H,OAAOL,KAAKC,OAAO,OAAQ,CAACkB,S,KAI7BjE,I,wBE1GAkE,I,2EAAf,gCAAAC,EAAA,0DAEQC,EADEC,EAAsBlE,OAAOmE,uBADvC,wDAGID,EAAqBE,SAHzB,SAI8BF,EAAqBG,WAJnD,uBAIYC,EAJZ,EAIYA,QACRtE,OAAOmE,sBAAwB,KALnC,kBAMWG,GANX,6C,sBASA,SAASL,EAAenE,GACpB,YAAkBC,IAAVD,GAAmC,OAAVA,EAjBrCE,OAAOmE,sBAAwB,KAC/BnE,OAAOuE,iBAAiB,uBAAuB,SAACC,GAC9CC,MAAM,uBAAD,OAAwB5E,EAAMkD,MAAMyB,KACzCA,EAAME,iBAEN1E,OAAOmE,sBAAwBK,KAkE1B,IAAMG,EAAmC,SAAC,GAAiG,IAA/FC,EAA8F,EAA9FA,YAAaC,EAAiF,EAAjFA,oBAAqBC,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,kBAAiD,IAA9BC,uBAA8B,SAC7I,EArCJ,SACIJ,EACAC,GAEA,IAAMI,EAAQC,mBAA6B,WACvC,IAAMC,EAASC,aAAaC,QAAQ,mBACpC,GAAIpB,EAAekB,GAAS,OAAOP,EACnC,IACI,IAAMU,EAAeC,KAAKC,MAAML,GAChC,OAAIG,EAAaG,UAAYb,EAAYa,QAAgBb,EAClD,2BAAKA,GAAgBU,GAC9B,MAAOI,GACL,OAAOd,KAGZ,IACGe,GAA6Bd,EAAoBI,GACvD,EAAwBW,mBAAS,2BAAKX,GAAN,IAAaY,WAAYZ,EAAMY,YAAcF,EAA4B,EAAI,MAA7G,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgDH,oBAAS,GAAzD,mBAAOI,EAAP,KAAyBC,EAAzB,KAOA,OANAC,qBAAU,WACNC,QAAQC,IAAI,kBAAmBN,GAC/BrB,MAAM,wBAAD,OAAyB5E,EAAMkD,MAAM+C,KAC1CV,aAAaiB,QAAQ,kBAAmBd,KAAKe,UAAUR,IACvDG,EAAoBpB,EAAoBiB,MACzC,CAACA,EAAMjB,IACH,CAACiB,EAAMC,EAASC,GAYmBO,CAAuB3B,EAAaC,GAA9E,mBAAOiB,EAAP,KAAaC,EAAb,KAAsBC,EAAtB,KAEA,EAAwCJ,wBAAkD7F,GAA1F,mBAAOyG,EAAP,KAAqBC,EAArB,KACMC,EAA8BC,uBAAY,WAC5CC,GAA4B,KAC7B,IACGC,EAAiB3B,mBAAQ,kBAAMH,EAAkB2B,KAA8B,CAAC3B,EAAmB2B,IACzG,EAA0Cd,oBAAS,GAAnD,mBAAOkB,EAAP,KAAsBC,EAAtB,KACAb,qBAAU,WACNc,YAAW,WACP,KA9DDhH,OAAOC,WAAW,sCAAsCC,SAI3DF,OAAOI,UAAU6G,YAEjBjH,OAAOC,WAAW,8BAA8BC,SAwD5C,CACA,IAAMgH,EAAkBlH,OAAOmE,sBAC/BsC,EAAgBS,GAChB,IAAMC,GAAuBlD,EAAeiD,GACtCE,GAAyBnD,EAAe4C,GAC9CE,EAAiBI,GAAuBC,MACzC,QAEP,MAAgExB,oBAAS,GAAzE,mBAAOyB,EAAP,KAAiCT,EAAjC,KAEMU,EAAoBX,uBAAY,WAClC,IAAMY,EAAa,uCAAG,4BAAAvD,EAAA,yDACdM,OAAqDvE,EACpDkE,EAAeuC,GAFF,gCAGEzC,IAHF,OAGdO,EAHc,6BAKdsC,GAA4B,GAC5BtC,EAAU,YANI,OAQF,aAAZA,GACAyB,EAAQ,2BAAKD,GAAN,IAAY0B,aAAc1B,EAAK0B,aAAe,KATvC,4CAAH,qDAYnBD,MACD,CAACzB,EAAMC,EAASS,IACbiB,EAAmBd,uBAAY,WACjCZ,EAAQ,2BAAKD,GAAN,IAAY0B,aAAc1B,EAAK0B,aAAe,OACtD,CAAC1B,EAAMC,IAEV,OAAO,sCACAe,GAAiBd,GAAqBhB,IAAoBF,EAAUwC,EAAmBG,GACzFX,GAAiBO,GAA4BR,M,0DCtCvCa,MApFf,WAAgB,IAAD,aACLC,EAAQ,CACVC,UAAW/H,EAAM+H,aAEfC,EAAW,IAAIC,IAAIxE,OAAOC,QAAQoE,GAAOlE,QAAO,uDAAkBZ,KAAI,mCAAEkF,EAAF,iBAAeA,MAE3F,OACI,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACM,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,8CALI,GAKJ,IAC2B,uBACtBtI,EAAMuI,YAFX,IAEyBvI,EAAMwI,iBAF/B,IAEkDxI,EAAMkD,MAAM8E,GAF9D,IAEyE,uBAFzE,2BAG6BhI,EAAMkD,MAAN,UAAY/C,OAAOI,UAAUE,qBAA7B,aAAY,EAAgCD,UAHzE,IAGoF,uBAHpF,aAIeR,EAAMkD,MAAM/C,OAAOI,UAAUC,UAJ5C,IAIuD,uBAJvD,kBAKoBR,EAAMkD,QAAQ/C,OAAO+B,QALzC,IAKkD,uBALlD,eAMiBlC,EAAMkD,QAAQ/C,OAAOkB,KANtC,IAM4C,uBAN5C,WAOarB,EAAMkD,OAAM,oBAAC3C,UAAUE,qBAAX,aAAC,EAAyBe,cAA1B,QAAoC,IAAIwB,KAAI,SAAAtB,GAAC,OAAIA,EAAEC,UAP5E,IAOqF,uBAPrF,cAQgB3B,EAAMkD,MAAM/C,OAAOI,UAAUD,WAR7C,IAQyD,0BAEzD,sBAAKmI,MAAO,CAAEC,QAAS,OAAQC,IAAK,GAApC,UACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAO,sBAAE,gCAAA5E,EAAA,yDAC3CE,EAAsBlE,OAAOmE,sBACnCM,MAAM,mBAAD,OAAoB5E,EAAMkD,MAAMmB,MACjC,EAAKD,eAAeC,GAHyB,wDAIjDA,EAAoBE,SAJ6B,SAKvBF,EAAoBG,WALG,gBAKzCC,EALyC,EAKzCA,QACRG,MAAM,oBAAD,OAAqB5E,EAAMkD,MAAMuB,KACtCtE,OAAOmE,sBAAwB,KAPkB,4CAArD,4BASA,cAACsE,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,WAEjD5I,OAAO6I,SAASC,KAAO9I,OAAO6I,SAASC,MAF3C,yBAIA,cAACL,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,WACjDxD,aAAa2D,WAAW,oBAD5B,8BAKR,cAAC,EAAD,CACInE,YAAa,CAAEiB,WAAY,EAAG2B,aAAc,EAAG/B,QAnC3C,IAoCJZ,oBAAqB,SAACiB,GAClB,QAAIA,EAAK0B,cAAgB,KAClB1B,EAAKD,YAAL,SAAoB,EAAIC,EAAK0B,aAAe,IAEvD1C,UAAW,SAACkE,EAAOC,GACf,OAAO,sBAAKX,MAAO,CAAEY,UAAW,aAAcC,SAAU,QAASC,OAAQ,EAAGC,MAAO,OAAQd,QAAS,OAAQe,eAAgB,gBAAiBC,QAAS,mBAAoBC,WAAY,QAA/K,UACH,sBAAKlB,MAAO,CAAEC,QAAS,OAAQkB,WAAY,SAAUjB,IAAK,GAA1D,UACI,cAAC,IAAD,IACA,cAACC,EAAA,EAAD,CAAQE,MAAM,UAAUC,QAASI,EAAjC,mDAEJ,cAACU,EAAA,EAAD,CAAYd,QAASK,EAArB,SAA2B,cAAC,IAAD,UAGnClE,kBAAmB,SAAC4E,GAChB,OAAQ9J,EAAMuI,aACV,KAAKzI,EAAOc,KACZ,KAAKd,EAAOe,OAER,OACJ,QACI,OAAQb,EAAMwI,kBACV,KAAKzI,EAAYgC,QACb,OAAO,eAACgI,EAAA,EAAD,CAAQC,MAAM,EAAd,oCAGH,cAACH,EAAA,EAAD,CAAYd,QAASe,EAArB,SAA8B,cAAC,IAAD,SAEtC,KAAK/J,EAAYuB,MACb,OAAO,eAACyI,EAAA,EAAD,CAAQC,MAAM,EAAd,kCAGH,cAACH,EAAA,EAAD,CAAYd,QAASe,EAArB,SAA8B,cAAC,IAAD,SAEtC,QACI,gBCvErBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrH,SAASsH,eAAe,SAM1BZ,M","file":"static/js/main.062c8197.chunk.js","sourcesContent":["declare global {\n    interface Window {\n        chrome: any | undefined,\n        opr: any | undefined,\n    }\n    interface Navigator {\n        userAgentData: {\n            brands: { brand: string }[],\n            platform: string,\n        } | undefined,\n    }\n}\n\nexport enum OsName {\n    Android = \"Android\",\n    Ipad = \"Ipad\",\n    Iphone = \"Iphone\",\n    Blackberry = \"Blackberry\",\n    Windows = \"Windows\",\n    Mac = \"Mac\",\n    Linux = \"Linux\",\n    Unknown = \"Unknown\",\n}\nexport enum BrowserName {\n    Edge = \"Edge\",\n    Opera = \"Opera\",\n    SamsungInternet = \"Samsung Internet\",\n    Chrome = \"Chrome\",\n    Vivaldi = \"Vivaldi\",\n    Yandex = \"Yandex\",\n    Firefox = \"Firefox\",\n    Safari = \"Safari\",\n    InternetExplorer = \"Internet Explorer\",\n    Chromium = \"Chromium\",\n    Unknown = \"Unknown\",\n}\n\nclass Utils {\n    public static isValueMissing(value: any): boolean {\n        return (value === undefined) || (value === null);\n    }\n\n    // Add to homescreen\n    public static isDesktop(): boolean {\n        return window.matchMedia(\"(hover: hover) and (pointer: fine)\").matches;\n    }\n    public static getOsName(): OsName {\n        const userAgent = window.navigator.userAgent;\n        const platform = window.navigator.userAgentData?.platform || window.navigator.platform;\n        switch (true) {\n            case /Android/i.test(userAgent):\n                return OsName.Android;\n            case /iPad/i.test(userAgent) || /iPad/i.test(platform):\n                return OsName.Ipad;\n            case /iPhone|iPod/i.test(userAgent) || /iPhone|iPod/i.test(platform):\n                return OsName.Iphone;\n            case /BlackBerry/i.test(userAgent):\n                return OsName.Blackberry;\n            case /Win32|Win64|WinCE|Windows/i.test(platform):\n                return OsName.Windows;\n            case /Macintosh|MacIntel|MacPPC|Mac68K|Darwin/i.test(platform):\n                return OsName.Mac;\n            case /Linux/i.test(platform):\n                return OsName.Linux;\n            default:\n                return OsName.Unknown;\n        }\n    }\n    public static getBrowserName(): BrowserName {\n        const userAgent = window.navigator.userAgent;\n        switch (true) {\n            case /Edge|Edg|EdgiOS/i.test(userAgent):\n                return BrowserName.Edge;\n            case /OPR|Opera/i.test(userAgent) || Boolean(window.opr):\n                return BrowserName.Opera;\n            case /SamsungBrowser/i.test(userAgent):\n                return BrowserName.SamsungInternet;\n            case /CriOS/i.test(userAgent):\n            case /Chrome/i.test(userAgent) && (navigator.userAgentData?.brands ?? []).some(b => b.brand === \"Google Chrome\"):\n                return BrowserName.Chrome;\n            case /Vivaldi/i.test(userAgent):\n                return BrowserName.Vivaldi;\n            case /YaBrowser/i.test(userAgent):\n                return BrowserName.Yandex;\n            case /Firefox|FxiOS/i.test(userAgent):\n                return BrowserName.Firefox;\n            case /Safari/i.test(userAgent):\n                return BrowserName.Safari;\n            case /MSIE|Trident|IEMobile|WPDesktop/i.test(userAgent):\n                return BrowserName.InternetExplorer;\n            case Boolean(window.chrome):\n                return BrowserName.Chromium;\n            default:\n                return BrowserName.Unknown;\n        }\n    }\n\n    // formatting\n    public static format(str: string, values: any[]): string {\n        return str.replace(/%(\\d+)/g, (match: string, group1: string) => {\n            return String(values?.[+group1] ?? \"\");\n        });\n    }\n    public static print(value: any, depth = 1): string {\n        const MAX_DEPTH = 3;\n        switch (value?.constructor?.name) {\n            case \"String\":\n                return this.format(\"\\\"%0\\\"\", [value]);\n            case \"Number\":\n            case \"Boolean\":\n            case undefined:\n                return String(value);\n            case \"Array\":\n                if (depth >= MAX_DEPTH) return \"[...]\";\n                return this.format(\"[%0]\", [value.map((v: any) => this.print(v, depth+1)).join(\", \")]);\n            case \"Set\":\n                if (depth >= MAX_DEPTH) return \"{...}\";\n                const valuesString = Array.from(value as Set<any>).map(v => this.print(v, depth+1)).join(\", \");\n                return this.format(\"{%0}\", [valuesString]);\n            default:\n                if (depth >= MAX_DEPTH || value === window || value === document) return \"{...}\";\n                const keys = [\n                    ...Object.entries(Object.getOwnPropertyDescriptors(value)).filter(([k, d]) => d.enumerable).map(([k, d]) => k),\n                    ...Object.entries(Object.getOwnPropertyDescriptors(value.constructor?.prototype ?? {})).filter(([k, d]) => d.enumerable).map(([k, d]) => k),\n                ].flat();\n                const entriesString = keys.map((k) => this.format(\"%0: %1\", [this.print(k, depth+1), this.print(value[k], depth+1)])).join(\", \");\n                return this.format(\"{%0}\", [entriesString]);\n        }\n    }\n}\nexport default Utils;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport Utils from \"./utils\";\n\nexport type BeforeInstallEventPromptOutcome = \"accepted\"|\"dismissed\";\nexport type BeforeInstallEventPrompt = {\n    prompt: () => void,\n    userChoice: Promise<{ outcome: BeforeInstallEventPromptOutcome }>;\n}\ndeclare global {\n    interface Window {\n        deferredInstallPrompt: BeforeInstallEventPrompt|null|undefined,\n    }\n    interface Navigator {\n        standalone: any,\n    }\n}\n\nwindow.deferredInstallPrompt = null;\nwindow.addEventListener(\"beforeinstallprompt\", (event) => {\n  alert(`beforeinstallprompt ${Utils.print(event)}`);\n  event.preventDefault();\n  // @ts-ignore\n  window.deferredInstallPrompt = event;\n});\nasync function showNativeInstallPromptIfExists(): Promise<BeforeInstallEventPromptOutcome|undefined> {\n    const nativeInstallPrompt = window.deferredInstallPrompt;\n    if (isValueMissing(nativeInstallPrompt)) return;\n    nativeInstallPrompt!.prompt();\n    const { outcome } = await nativeInstallPrompt!.userChoice;\n    window.deferredInstallPrompt = null;\n    return outcome;\n}\n\nfunction isValueMissing(value: any): boolean {\n    return (value === undefined) || (value === null);\n}\nfunction isDesktop(): boolean {\n    return window.matchMedia(\"(hover: hover) and (pointer: fine)\").matches;\n}\nfunction isAppInstalled(): boolean {\n    // iOS\n    if (window.navigator.standalone) return true;\n    // Android\n    if (window.matchMedia('(display-mode: standalone)').matches) return true;\n    return false;\n}\n\ntype AddToHomescreenData = {\n    pageVisits: number,\n    dismissCount: number,\n    version: number,\n}\nfunction useAddToHomeScreenData(\n    defaultData: AddToHomescreenData,\n    getShouldShowAdvert: (data: AddToHomescreenData) => boolean,\n): [AddToHomescreenData, (data: AddToHomescreenData) => void, boolean] {\n    const _data = useMemo<AddToHomescreenData>(() => {\n        const __data = localStorage.getItem(\"AddToHomeScreen\");\n        if (isValueMissing(__data)) return defaultData;\n        try {\n            const _parsed_data = JSON.parse(__data!);\n            if (_parsed_data.version !== defaultData.version) return defaultData;\n            return { ...defaultData, ..._parsed_data };\n        } catch (error) {\n            return defaultData;\n        }\n    // eslint-disable-next-line\n    }, []);\n    const shouldIncrementPageVisits = !getShouldShowAdvert(_data);\n    const [data, setData] = useState({ ..._data, pageVisits: _data.pageVisits + (shouldIncrementPageVisits ? 1 : 0) });\n    const [shouldShowAdvert, setShouldShowAdvert] = useState(false);\n    useEffect(() => {\n        console.log(\"AddToHomeScreen\", data);\n        alert(`AddToHomeScreenData: ${Utils.print(data)}`);\n        localStorage.setItem(\"AddToHomeScreen\", JSON.stringify(data));\n        setShouldShowAdvert(getShouldShowAdvert(data));\n    }, [data, getShouldShowAdvert]);\n    return [data, setData, shouldShowAdvert];\n}\n\ntype Props = {\n    defaultData: AddToHomescreenData,\n    maxDismissCount?: number,\n    getShouldShowAdvert: (data: AddToHomescreenData) => boolean,\n    getGuidancePrompt: (closeCallback: () => void) => JSX.Element|undefined|null,\n    getAdvert: (yesCallback: () => void, noCallback: () => void) => JSX.Element,\n    forceShowAdvert?: boolean,\n}\nexport const AddToHomescreen: React.FC<Props> = ({ defaultData, getShouldShowAdvert, getAdvert, getGuidancePrompt, forceShowAdvert = false }) => {\n    const [data, setData, shouldShowAdvert] = useAddToHomeScreenData(defaultData, getShouldShowAdvert);\n    // prompts\n    const [nativePrompt, setNativePrompt] = useState<BeforeInstallEventPrompt|null|undefined>(undefined);\n    const guidancePromptCloseCallback = useCallback(() => {\n        setShouldShowGuidancePrompt(false);\n    }, []);\n    const guidancePrompt = useMemo(() => getGuidancePrompt(guidancePromptCloseCallback), [getGuidancePrompt, guidancePromptCloseCallback]);\n    const [canShowPrompt, setCanShowPrompt] = useState(false);\n    useEffect(() => {\n        setTimeout(() => {\n            if (isDesktop() || isAppInstalled()) return;\n            const newNativePrompt = window.deferredInstallPrompt;\n            setNativePrompt(newNativePrompt);\n            const canShowNativePrompt = !isValueMissing(newNativePrompt);\n            const canShowGuidancePrompt = !isValueMissing(guidancePrompt);\n            setCanShowPrompt(canShowNativePrompt || canShowGuidancePrompt);\n        }, 1000);\n    });\n    const [shouldShowGuidancePrompt, setShouldShowGuidancePrompt] = useState(false);\n    // advert\n    const advertYesCallback = useCallback(() => {\n        const asyncCallback = async () => {\n            let outcome: BeforeInstallEventPromptOutcome|undefined = undefined;\n            if (!isValueMissing(nativePrompt)) {\n                outcome = await showNativeInstallPromptIfExists();\n            } else {\n                setShouldShowGuidancePrompt(true);\n                outcome = \"dismissed\";\n            }\n            if (outcome === \"accepted\") {\n                setData({ ...data, dismissCount: data.dismissCount + 1 });\n            }\n        };\n        asyncCallback();\n    }, [data, setData, nativePrompt]);\n    const advertNoCallback = useCallback(() => {\n        setData({ ...data, dismissCount: data.dismissCount + 1 });\n    }, [data, setData]);\n\n    return <>\n        {((canShowPrompt && shouldShowAdvert) || forceShowAdvert) && getAdvert(advertYesCallback, advertNoCallback)}\n        {canShowPrompt && shouldShowGuidancePrompt && guidancePrompt}\n    </>;\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Utils, { BrowserName, OsName } from './utils';\nimport { AddToHomescreen } from './AddToHomescreen';\nimport { Button, Dialog, IconButton } from '@material-ui/core';\nimport AndroidIcon from '@material-ui/icons/Android';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction App() {\n    const flags = {\n        isDesktop: Utils.isDesktop(),\n    }\n    const flagsSet = new Set(Object.entries(flags).filter(([flag, v]) => v).map(([flag, v]) => flag));\n    const VERSION = 14;\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    App version: {VERSION} <br />\n                    {Utils.getOsName()} {Utils.getBrowserName()} {Utils.print(flagsSet)} <br />\n                    userAgentData.platform: {Utils.print(window.navigator.userAgentData?.platform)} <br />\n                    platform: {Utils.print(window.navigator.platform)} <br />\n                    window.chrome: {Utils.print(!!window.chrome)} <br />\n                    window.opr: {Utils.print(!!window.opr)} <br />\n                    brands: {Utils.print((navigator.userAgentData?.brands ?? []).map(b => b.brand))} <br />\n                    userAgent: {Utils.print(window.navigator.userAgent)} <br />\n                </p>\n                <div style={{ display: \"flex\", gap: 8 }}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={async () => {\n                        const nativeInstallPrompt = window.deferredInstallPrompt;\n                        alert(`Install prompt: ${Utils.print(nativeInstallPrompt)}`);\n                        if (this.isValueMissing(nativeInstallPrompt)) return;\n                        nativeInstallPrompt.prompt();\n                        const { outcome } = await nativeInstallPrompt.userChoice;\n                        alert(`Install outcome: ${Utils.print(outcome)}`);\n                        window.deferredInstallPrompt = null;\n                    }}>Native install</Button>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                        // eslint-disable-next-line\n                        window.location.href = window.location.href;\n                    }}>Reload page</Button>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                        localStorage.removeItem(\"AddToHomeScreen\");\n                    }}>Reset data</Button>\n                </div>\n            </header>\n            <AddToHomescreen\n                defaultData={{ pageVisits: 0, dismissCount: 0, version: VERSION }}\n                getShouldShowAdvert={(data) => {\n                    if (data.dismissCount >= 20) return false;\n                    return data.pageVisits >= (3**(data.dismissCount + 1));\n                }}\n                getAdvert={(onYes, onNo) => {\n                    return <div style={{ boxSizing: \"border-box\", position: \"fixed\", bottom: 0, width: \"100%\", display: \"flex\", justifyContent: \"space-between\", padding: \"8px 4px 8px 20px\", background: \"#fff\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\", gap: 8 }}>\n                            <AndroidIcon />\n                            <Button color=\"primary\" onClick={onYes}>Přidat aplikaci pwa na plochu</Button>\n                        </div>\n                        <IconButton onClick={onNo}><CloseIcon /></IconButton>\n                    </div>;\n                }}\n                getGuidancePrompt={(onClose) => {\n                    switch (Utils.getOsName()) {\n                        case OsName.Ipad:\n                        case OsName.Iphone:\n                            // TODO: add ios guidance images\n                            return;\n                        default:\n                            switch (Utils.getBrowserName()) {\n                                case BrowserName.Firefox:\n                                    return <Dialog open={true}>\n                                        {/* TODO: add firefox guidance image */}\n                                        Firefox guidance prompt\n                                        <IconButton onClick={onClose}><CloseIcon /></IconButton>\n                                    </Dialog>;\n                                case BrowserName.Opera:\n                                    return <Dialog open={true}>\n                                        {/* TODO: add opera guidance image */}\n                                        Opera guidance prompt\n                                        <IconButton onClick={onClose}><CloseIcon /></IconButton>\n                                    </Dialog>;\n                                default:\n                                    return undefined;\n                            }\n                    }\n                }}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}