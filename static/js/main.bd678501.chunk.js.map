{"version":3,"sources":["logo.svg","utils.ts","App.js","reportWebVitals.js","index.js"],"names":["Utils","window","matchMedia","matches","Boolean","chrome","navigator","userAgentData","brands","some","b","brand","test","userAgent","vendor","opr","this","isChromium","str","values","replace","match","group1","String","App","flags","isDesktop","isIpad","isIphone","isAndroid","flagsString","Object","entries","filter","map","flag","join","brandsString","format","className","src","logo","alt","getBrowserName","onClick","a","deferredInstallPrompt","console","log","prompt","userChoice","outcome","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","addEventListener","event","preventDefault"],"mappings":"sNAAe,MAA0B,iC,sBC2D1BA,E,8FAhDX,WACI,OAAOC,OAAOC,WAAW,sCAAsCC,U,wBAEnE,WAAqC,IAAD,IAChC,OAAOC,QAAQH,OAAOI,SAAP,UAAiBC,UAAUC,qBAA3B,iBAAiB,EAAyBC,cAA1C,aAAiB,EAAiCC,MAAK,SAAAC,GAAC,MAAgB,kBAAZA,EAAEC,a,oBAEjF,WACI,OAAOP,QAAQ,QAAQQ,KAAKX,OAAOK,UAAUO,c,sBAEjD,WACI,OAAOT,QAAQ,eAAeQ,KAAKX,OAAOK,UAAUO,c,uBAExD,WACI,OAAOT,QAAQ,WAAWQ,KAAKX,OAAOK,UAAUO,c,4BAEpD,WACI,IAAMA,EAAYZ,OAAOK,UAAUO,UAC7BC,EAASb,OAAOK,UAAUQ,OAChC,QAAQ,GACJ,IAAK,mBAAmBF,KAAKC,GACzB,MAAO,OACX,IAAK,aAAaD,KAAKC,IAAcT,QAAQH,OAAOc,KAChD,MAAO,QACX,IAAK,SAASH,KAAKC,GACnB,IAAK,UAAUD,KAAKC,IAAyB,gBAAXC,GAA4BE,KAAKC,aAC/D,MAAO,SACX,IAAK,WAAWL,KAAKC,GACjB,MAAO,UACX,IAAK,aAAaD,KAAKC,GACnB,MAAO,SACX,IAAK,iBAAiBD,KAAKC,GACvB,MAAO,UACX,IAAK,UAAUD,KAAKC,GAChB,MAAO,SACX,IAAK,mCAAmCD,KAAKC,GACzC,MAAO,oBACX,IAAK,iFAAiFD,KAAKC,GACvF,MAAO,mBACX,QACI,MAAO,a,oBAGnB,SAAqBK,EAAaC,GAC9B,OAAOD,EAAIE,QAAQ,WAAW,SAACC,EAAeC,GAAoB,IAAD,EAC7D,OAAOC,OAAM,iBAACJ,QAAD,IAACA,OAAD,EAACA,GAAUG,UAAX,QAAsB,W,YCjBhCE,MAlCf,WAAgB,IAAD,IACLC,EAAQxB,OAAOwB,MAAQ,CACzBC,UAAW1B,EAAM0B,YACjBT,WAAYjB,EAAMiB,aAClBU,OAAQ3B,EAAM2B,SACdC,SAAU5B,EAAM4B,WAChBC,UAAW7B,EAAM6B,aAEfC,EAAcC,OAAOC,QAAQP,GAAOQ,QAAO,uDAAkBC,KAAI,mCAAEC,EAAF,iBAAeA,KAAMC,KAAK,MAC3FC,GAAe,oBAAC/B,UAAUC,qBAAX,aAAC,EAAyBC,cAA1B,QAAoC,IAAI0B,KAAI,SAAAxB,GAAC,OAAIV,EAAMsC,OAAO,OAAU,CAAC5B,EAAEC,WAASyB,KAAK,MAC9G,OACI,qBAAKG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACM,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,2CACc,uBACT1C,EAAMsC,OAAO,OAAU,CAACrC,OAAOK,UAAUO,YAF9C,IAE2D,uBACtDb,EAAMsC,OAAO,OAAU,CAACrC,OAAOK,UAAUQ,SAH9C,IAGwD,uBACnDd,EAAMsC,OAAO,OAAQ,CAACD,IAJ3B,IAI2C,uBACtCrC,EAAM2C,iBALX,IAK8B3C,EAAMsC,OAAO,OAAQ,CAACR,OAEpD,wBAAQc,QAAO,sBAAE,8BAAAC,EAAA,yDACwB,OAAjC5C,OAAO6C,sBADE,wDAEbC,QAAQC,IAAI,UACZ/C,OAAO6C,sBAAsBG,SAHhB,SAIahD,OAAO6C,sBAAsBI,WAJ1C,gBAILC,EAJK,EAILA,QACRJ,QAAQC,IAAR,kBAAuBG,IACvBlD,OAAO6C,sBAAwB,KANlB,4CAAjB,2BCbDM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,IAEAnD,OAAO6C,sBAAwB,KAE/B7C,OAAOiE,iBAAiB,uBAAuB,SAACC,GAC9CpB,QAAQC,IAAI,uBACZmB,EAAMC,iBACNnE,OAAO6C,sBAAwBqB,KAGjClE,OAAOiE,iBAAiB,gBAAgB,WACtCnB,QAAQC,IAAI,gBAEZ/C,OAAO6C,sBAAwB,U","file":"static/js/main.bd678501.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","declare global {\n    interface Window {\n        chrome: any | undefined,\n        opr: any | undefined,\n    }\n    interface Navigator {\n        userAgentData: { brands: { brand: string }[] } | undefined,\n    }\n}\n\nclass Utils {\n    public static isDesktop(): Boolean {\n        return window.matchMedia(\"(hover: hover) and (pointer: fine)\").matches;\n    }\n    public static isChromium(): Boolean {\n        return Boolean(window.chrome || navigator.userAgentData?.brands?.some(b => b.brand === \"Google Chrome\"));\n    }\n    public static isIpad(): Boolean {\n        return Boolean(/iPad/i.test(window.navigator.userAgent));\n    }\n    public static isIphone(): Boolean {\n        return Boolean(/iPhone|iPod/i.test(window.navigator.userAgent));\n    }\n    public static isAndroid(): Boolean {\n        return Boolean(/Android/i.test(window.navigator.userAgent));\n    }\n    public static getBrowserName() {\n        const userAgent = window.navigator.userAgent;\n        const vendor = window.navigator.vendor;\n        switch (true) {\n            case /Edge|Edg|EdgiOS/i.test(userAgent):\n                return \"Edge\";\n            case /OPR|Opera/i.test(userAgent) && Boolean(window.opr):\n                return \"Opera\";\n            case /CriOS/i.test(userAgent):\n            case /Chrome/i.test(userAgent) && vendor === \"Google Inc.\" && this.isChromium():\n                return \"Chrome\";\n            case /Vivaldi/i.test(userAgent):\n                return \"Vivaldi\";\n            case /YaBrowser/i.test(userAgent):\n                return \"Yandex\";\n            case /Firefox|FxiOS/i.test(userAgent):\n                return \"Firefox\";\n            case /Safari/i.test(userAgent):\n                return \"Safari\";\n            case /MSIE|Trident|IEMobile|WPDesktop/i.test(userAgent):\n                return \"Internet Explorer\";\n            case /SAMSUNG|Samsung|SGH-[I|N|T]|GT-[I|N]|SM-[A|N|P|T|Z]|SHV-E|SCH-[I|J|R|S]|SPH-L/i.test(userAgent):\n                return \"Samsung Internet\";\n            default:\n                return \"Unknown\";\n        }\n    }\n    public static format(str: string, values: any[]): string {\n        return str.replace(/%(\\d+)/g, (match: string, group1: string) => {\n            return String(values?.[+group1] ?? \"\");\n        });\n    }\n}\nexport default Utils;\n","import logo from './logo.svg';\nimport './App.css';\nimport Utils from './utils';\n\nfunction App() {\n    const flags = window.flags = {\n        isDesktop: Utils.isDesktop(),\n        isChromium: Utils.isChromium(),\n        isIpad: Utils.isIpad(),\n        isIphone: Utils.isIphone(),\n        isAndroid: Utils.isAndroid(),\n    }\n    const flagsString = Object.entries(flags).filter(([flag, v]) => v).map(([flag, v]) => flag).join(\", \");\n    const brandsString = (navigator.userAgentData?.brands ?? []).map(b => Utils.format(\"\\\"%0\\\"\", [b.brand])).join(\", \");\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Version 1 <br />\n                    {Utils.format(\"\\\"%0\\\"\", [window.navigator.userAgent])} <br />\n                    {Utils.format(\"\\\"%0\\\"\", [window.navigator.vendor])} <br />\n                    {Utils.format(\"[%0]\", [brandsString])} <br />\n                    {Utils.getBrowserName()} {Utils.format(\"{%0}\", [flagsString])}\n                </p>\n                <button onClick={async () => {\n                    if (window.deferredInstallPrompt === null) return;\n                    console.log(\"button\");\n                    window.deferredInstallPrompt.prompt();\n                    const { outcome } = await window.deferredInstallPrompt.userChoice;\n                    console.log(`button: ${outcome}`);\n                    window.deferredInstallPrompt = null;\n                }}>Install</button>\n          </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nwindow.deferredInstallPrompt = null;\n\nwindow.addEventListener(\"beforeinstallprompt\", (event) => {\n  console.log(\"beforeinstallprompt\");\n  event.preventDefault();\n  window.deferredInstallPrompt = event;\n  //showInstallPrompt();\n});\nwindow.addEventListener(\"appinstalled\", () => {\n  console.log(\"appinstalled\");\n  //hideInstallPrompt();\n  window.deferredInstallPrompt = null;\n});\n"],"sourceRoot":""}