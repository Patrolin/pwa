{"version":3,"sources":["utils.ts","logo.svg","AddToHomescreen.tsx","App.js","reportWebVitals.js","index.js"],"names":["OsName","BrowserName","Utils","value","undefined","window","matchMedia","matches","userAgent","navigator","platform","userAgentData","some","v","test","Android","Ipad","Iphone","Blackberry","Windows","Mac","Linux","Unknown","Edge","Boolean","opr","Opera","SamsungInternet","brands","b","brand","Chrome","Vivaldi","Yandex","Firefox","Safari","InternetExplorer","chrome","Chromium","str","values","replace","match","group1","String","depth","MAX_DEPTH","constructor","name","this","format","map","print","join","valuesString","Array","from","document","keys","Object","entries","getOwnPropertyDescriptors","filter","enumerable","k","prototype","flat","entriesString","showNativeInstallPromptIfExists","a","isValueMissing","nativeInstallPrompt","deferredInstallPrompt","prompt","userChoice","outcome","addEventListener","event","alert","preventDefault","AddToHomescreen","defaultData","getShouldShowAdvert","getAdvert","getGuidancePrompt","forceShowAdvert","_data","useMemo","__data","localStorage","getItem","_parsed_data","JSON","parse","version","error","shouldIncrementPageVisits","useState","pageVisits","data","setData","shouldShowAdvert","setShouldShowAdvert","useEffect","console","log","setItem","stringify","useAddToHomeScreenData","nativePrompt","setNativePrompt","guidancePromptCloseCallback","useCallback","setShouldShowGuidancePrompt","guidancePrompt","canShowPrompt","setCanShowPrompt","setTimeout","standalone","referrer","startsWith","newNativePrompt","canShowNativePrompt","canShowGuidancePrompt","shouldShowGuidancePrompt","advertYesCallback","asyncCallback","dismissCount","advertNoCallback","GuidancePrompt","title","onClose","children","Dialog","open","style","display","justifyContent","alignItems","padding","gap","Typography","variant","IconButton","onClick","App","flags","isDesktop","flagsSet","Set","flag","className","src","logo","alt","getOsName","getBrowserName","mobile","Button","color","location","href","removeItem","onYes","onNo","boxSizing","position","bottom","width","background","osName","browserName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3347b1d6.chunk.js","sourcesContent":["declare global {\n    interface Window {\n        chrome: any | undefined,\n        opr: any | undefined,\n    }\n    interface Navigator {\n        userAgentData: {\n            brands: { brand: string }[],\n            mobile: boolean, // broken, don't use\n            platform: string,\n        } | undefined,\n    }\n}\n\nexport enum OsName {\n    Android = \"Android\",\n    Ipad = \"Ipad\",\n    Iphone = \"Iphone\",\n    Blackberry = \"Blackberry\",\n    Windows = \"Windows\",\n    Mac = \"Mac\",\n    // generic\n    Linux = \"Linux\",\n    Unknown = \"Unknown\",\n}\nexport enum BrowserName {\n    Edge = \"Edge\",\n    Opera = \"Opera\",\n    SamsungInternet = \"Samsung Internet\",\n    Chrome = \"Chrome\",\n    Vivaldi = \"Vivaldi\",\n    Yandex = \"Yandex\",\n    Firefox = \"Firefox\",\n    Safari = \"Safari\",\n    InternetExplorer = \"Internet Explorer\",\n    // generic\n    Chromium = \"Chromium\",\n    Unknown = \"Unknown\",\n}\n\nclass Utils {\n    public static isValueMissing(value: any): boolean {\n        return (value === undefined) || (value === null);\n    }\n\n    // Add to homescreen\n    public static isDesktop(): boolean {\n        return window.matchMedia(\"(hover: hover) and (pointer: fine)\").matches;\n    }\n    public static getOsName(): OsName {\n        const userAgent = window.navigator.userAgent;\n        const platform = window.navigator.userAgentData?.platform || window.navigator.platform;\n        switch (true) {\n            case [userAgent, platform].some(v => /Android/i.test(v)):\n                return OsName.Android;\n            case [userAgent, platform].some(v => /iPad/i.test(v)):\n                return OsName.Ipad;\n            case [userAgent, platform].some(v => /iPhone|iPod/i.test(v)):\n                return OsName.Iphone;\n            case [userAgent, platform].some(v => /BlackBerry/i.test(v)):\n                return OsName.Blackberry;\n            case [userAgent, platform].some(v => /Win32|Win64|WinCE|Windows/i.test(v)):\n                return OsName.Windows;\n            case [userAgent, platform].some(v => /Macintosh|MacIntel|MacPPC|Mac68K|Darwin/i.test(v)):\n                return OsName.Mac;\n            // generic\n            case [userAgent, platform].some(v => /Linux/i.test(v)):\n                return OsName.Linux;\n            default:\n                return OsName.Unknown;\n        }\n    }\n    public static getBrowserName(): BrowserName {\n        const userAgent = window.navigator.userAgent;\n        switch (true) {\n            case /Edge|Edg|EdgiOS/i.test(userAgent):\n                return BrowserName.Edge;\n            case /OPR|Opera/i.test(userAgent) || Boolean(window.opr):\n                return BrowserName.Opera;\n            case /SamsungBrowser/i.test(userAgent):\n                return BrowserName.SamsungInternet;\n            case /CriOS/i.test(userAgent): // Chrome iOS\n            case /Chrome/i.test(userAgent) && (navigator.userAgentData?.brands ?? []).some(b => b.brand === \"Google Chrome\"):\n                return BrowserName.Chrome;\n            case /Vivaldi/i.test(userAgent):\n                return BrowserName.Vivaldi;\n            case /YaBrowser/i.test(userAgent):\n                return BrowserName.Yandex;\n            case /Firefox|FxiOS/i.test(userAgent):\n                return BrowserName.Firefox;\n            case /Safari/i.test(userAgent):\n                return BrowserName.Safari;\n            case /MSIE|Trident|IEMobile|WPDesktop/i.test(userAgent):\n                return BrowserName.InternetExplorer;\n            // generic\n            case Boolean(window.chrome):\n                return BrowserName.Chromium;\n            default:\n                return BrowserName.Unknown;\n        }\n    }\n\n    // formatting\n    public static format(str: string, values: any[]): string {\n        return str.replace(/%(\\d+)/g, (match: string, group1: string) => {\n            return String(values?.[+group1] ?? \"\");\n        });\n    }\n    public static print(value: any, depth = 1): string {\n        const MAX_DEPTH = 3;\n        switch (value?.constructor?.name) {\n            case \"String\":\n                return this.format(\"\\\"%0\\\"\", [value]);\n            case \"Number\":\n            case \"Boolean\":\n            case undefined:\n                return String(value);\n            case \"Array\":\n                if (depth >= MAX_DEPTH) return \"[...]\";\n                return this.format(\"[%0]\", [value.map((v: any) => this.print(v, depth+1)).join(\", \")]);\n            case \"Set\":\n                if (depth >= MAX_DEPTH) return \"{...}\";\n                const valuesString = Array.from(value as Set<any>).map(v => this.print(v, depth+1)).join(\", \");\n                return this.format(\"{%0}\", [valuesString]);\n            default:\n                if (depth >= MAX_DEPTH || value === window || value === document) return \"{...}\";\n                const keys = [\n                    ...Object.entries(Object.getOwnPropertyDescriptors(value)).filter(([k, d]) => d.enumerable).map(([k, d]) => k),\n                    ...Object.entries(Object.getOwnPropertyDescriptors(value.constructor?.prototype ?? {})).filter(([k, d]) => d.enumerable).map(([k, d]) => k),\n                ].flat();\n                const entriesString = keys.map((k) => this.format(\"%0: %1\", [this.print(k, depth+1), this.print(value[k], depth+1)])).join(\", \");\n                return this.format(\"%0{%1}\", [value.constructor?.name, entriesString]);\n        }\n    }\n}\nexport default Utils;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport Utils from \"./utils\";\n\nexport type BeforeInstallEventPromptOutcome = \"accepted\"|\"dismissed\";\nexport type BeforeInstallEventPrompt = {\n    prompt: () => void,\n    userChoice: Promise<{ outcome: BeforeInstallEventPromptOutcome }>;\n}\ndeclare global {\n    interface Window {\n        deferredInstallPrompt: BeforeInstallEventPrompt|null|undefined,\n    }\n    interface Navigator {\n        standalone: any,\n    }\n}\n\nwindow.deferredInstallPrompt = null;\nwindow.addEventListener(\"beforeinstallprompt\", (event) => {\n  alert(`beforeinstallprompt ${Utils.print(event)}`);\n  event.preventDefault();\n  // @ts-ignore\n  window.deferredInstallPrompt = event;\n});\nasync function showNativeInstallPromptIfExists(): Promise<BeforeInstallEventPromptOutcome|undefined> {\n    const nativeInstallPrompt = window.deferredInstallPrompt;\n    if (isValueMissing(nativeInstallPrompt)) return;\n    nativeInstallPrompt!.prompt();\n    const { outcome } = await nativeInstallPrompt!.userChoice;\n    window.deferredInstallPrompt = null;\n    return outcome;\n}\n\nfunction isValueMissing(value: any): boolean {\n    return (value === undefined) || (value === null);\n}\nfunction isDesktop(): boolean {\n    return window.matchMedia(\"(hover: hover) and (pointer: fine)\").matches;\n}\nfunction isAppInstalled(): boolean {\n    // iOS\n    if (window.navigator.standalone) return true;\n    // Android\n    if (window.matchMedia('(display-mode: standalone)').matches || document.referrer.startsWith(\"android-app://\")) return true;\n    return false;\n}\n\ntype AddToHomescreenData = {\n    pageVisits: number,\n    dismissCount: number,\n    version: number,\n}\nfunction useAddToHomeScreenData(\n    defaultData: AddToHomescreenData,\n    getShouldShowAdvert: (data: AddToHomescreenData) => boolean,\n): [AddToHomescreenData, (data: AddToHomescreenData) => void, boolean] {\n    const _data = useMemo<AddToHomescreenData>(() => {\n        const __data = localStorage.getItem(\"AddToHomescreen\");\n        if (isValueMissing(__data)) return defaultData;\n        try {\n            const _parsed_data = JSON.parse(__data!);\n            if (_parsed_data.version !== defaultData.version) return defaultData;\n            return { ...defaultData, ..._parsed_data };\n        } catch (error) {\n            return defaultData;\n        }\n    // eslint-disable-next-line\n    }, []);\n    const shouldIncrementPageVisits = !getShouldShowAdvert(_data);\n    const [data, setData] = useState({ ..._data, pageVisits: _data.pageVisits + (shouldIncrementPageVisits ? 1 : 0) });\n    const [shouldShowAdvert, setShouldShowAdvert] = useState(false);\n    useEffect(() => {\n        console.log(\"AddToHomescreen\", data);\n        alert(`AddToHomescreen: ${Utils.print(data)}`);\n        localStorage.setItem(\"AddToHomescreen\", JSON.stringify(data));\n        setShouldShowAdvert(getShouldShowAdvert(data));\n    }, [data, getShouldShowAdvert]);\n    return [data, setData, shouldShowAdvert];\n}\n\ntype Props = {\n    defaultData: AddToHomescreenData,\n    maxDismissCount?: number,\n    getShouldShowAdvert: (data: AddToHomescreenData) => boolean,\n    getGuidancePrompt: (closeCallback: () => void) => JSX.Element|undefined|null,\n    getAdvert: (yesCallback: () => void, noCallback: () => void) => JSX.Element,\n    forceShowAdvert?: boolean,\n}\nexport const AddToHomescreen: React.FC<Props> = ({ defaultData, getShouldShowAdvert, getAdvert, getGuidancePrompt, forceShowAdvert = false }) => {\n    const [data, setData, shouldShowAdvert] = useAddToHomeScreenData(defaultData, getShouldShowAdvert);\n    // prompts\n    const [nativePrompt, setNativePrompt] = useState<BeforeInstallEventPrompt|null|undefined>(undefined);\n    const guidancePromptCloseCallback = useCallback(() => {\n        setShouldShowGuidancePrompt(false);\n    }, []);\n    const guidancePrompt = useMemo(() => getGuidancePrompt(guidancePromptCloseCallback), [getGuidancePrompt, guidancePromptCloseCallback]);\n    const [canShowPrompt, setCanShowPrompt] = useState(false);\n    useEffect(() => {\n        setTimeout(() => {\n            if (isDesktop() || isAppInstalled()) return;\n            const newNativePrompt = window.deferredInstallPrompt;\n            setNativePrompt(newNativePrompt);\n            const canShowNativePrompt = !isValueMissing(newNativePrompt);\n            const canShowGuidancePrompt = !isValueMissing(guidancePrompt);\n            setCanShowPrompt(canShowNativePrompt || canShowGuidancePrompt);\n        }, 1000);\n    });\n    const [shouldShowGuidancePrompt, setShouldShowGuidancePrompt] = useState(false);\n    // advert\n    const advertYesCallback = useCallback(() => {\n        const asyncCallback = async () => {\n            let outcome: BeforeInstallEventPromptOutcome|undefined = undefined;\n            if (!isValueMissing(nativePrompt)) {\n                outcome = await showNativeInstallPromptIfExists();\n            } else {\n                setShouldShowGuidancePrompt(true);\n                outcome = \"dismissed\";\n            }\n            if (outcome === \"accepted\") {\n                setData({ ...data, dismissCount: data.dismissCount + 1 });\n            }\n        };\n        asyncCallback();\n    }, [data, setData, nativePrompt]);\n    const advertNoCallback = useCallback(() => {\n        setData({ ...data, dismissCount: data.dismissCount + 1 });\n    }, [data, setData]);\n\n    return <>\n        {((canShowPrompt && shouldShowAdvert) || forceShowAdvert) && getAdvert(advertYesCallback, advertNoCallback)}\n        {canShowPrompt && shouldShowGuidancePrompt && guidancePrompt}\n    </>;\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Utils, { BrowserName, OsName } from './utils';\nimport { AddToHomescreen } from './AddToHomescreen';\nimport { Button, Dialog, IconButton, Typography } from '@material-ui/core';\nimport AndroidIcon from '@material-ui/icons/Android';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst GuidancePrompt = ({ title, onClose, children }) => {\n    return <Dialog open={true}>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", padding: \"8px 8px 8px 20px\", gap: 8 }}>\n            <Typography variant=\"h6\">{title}</Typography>\n            <IconButton onClick={onClose}><CloseIcon /></IconButton>\n        </div>\n        <div style={{ padding: \"0px 16px 16px 20px\" }}>\n            {children}\n        </div>\n    </Dialog>;\n}\n\nfunction App() {\n    const flags = {\n        isDesktop: Utils.isDesktop(),\n    }\n    const flagsSet = new Set(Object.entries(flags).filter(([flag, v]) => v).map(([flag, v]) => flag));\n    const VERSION = 17;\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    App version: {VERSION}, {Utils.getOsName()} {Utils.getBrowserName()} {Utils.print(flagsSet)} <br />\n                    desktop media: {Utils.print(window.matchMedia(\"(hover: hover) and (pointer: fine)\").matches)}, window.chrome: {Utils.print(!!window.chrome)}, window.opr: {Utils.print(!!window.opr)} <br />\n                    userAgentData: {Utils.print({\n                        platform: window.navigator.userAgentData?.platform,\n                        mobile: window.navigator.userAgentData?.mobile,\n                        brands: (window.navigator.userAgentData?.brands ?? []).map(b => b.brand),\n                    })} <br />\n                    navigator: {Utils.print({\n                        platform: window.navigator.platform,\n                        userAgent: window.navigator.userAgent,\n                    })} <br />\n                </p>\n                <div style={{ display: \"flex\", gap: 8 }}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={async () => {\n                        const nativeInstallPrompt = window.deferredInstallPrompt;\n                        alert(`Install prompt: ${Utils.print(nativeInstallPrompt)}`);\n                        if (this.isValueMissing(nativeInstallPrompt)) return;\n                        nativeInstallPrompt.prompt();\n                        const { outcome } = await nativeInstallPrompt.userChoice;\n                        alert(`Install outcome: ${Utils.print(outcome)}`);\n                        window.deferredInstallPrompt = null;\n                    }}>Native install</Button>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                        // eslint-disable-next-line\n                        window.location.href = window.location.href;\n                    }}>Reload page</Button>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                        localStorage.removeItem(\"AddToHomescreen\");\n                    }}>Reset data</Button>\n                </div>\n            </header>\n            <AddToHomescreen\n                defaultData={{ pageVisits: 0, dismissCount: 0, version: VERSION }}\n                getShouldShowAdvert={(data) => {\n                    if (data.dismissCount >= 20) return false;\n                    return data.pageVisits >= (3**(data.dismissCount + 1));\n                }}\n                getAdvert={(onYes, onNo) => {\n                    return <div style={{ boxSizing: \"border-box\", position: \"fixed\", bottom: 0, width: \"100%\", display: \"flex\", justifyContent: \"space-between\", padding: \"8px 4px 8px 20px\", background: \"#fff\" }}>\n                        <div style={{ display: \"flex\", alignItems: \"center\", gap: 8 }}>\n                            <AndroidIcon />\n                            <Button color=\"primary\" onClick={onYes}>Přidat aplikaci pwa na plochu</Button>\n                        </div>\n                        <IconButton onClick={onNo}><CloseIcon /></IconButton>\n                    </div>;\n                }}\n                getGuidancePrompt={(onClose) => {\n                    const osName = Utils.getOsName();\n                    const browserName = Utils.getBrowserName();\n                    switch (osName) {\n                        case OsName.Ipad:\n                        case OsName.Iphone:\n                            switch (browserName) {\n                                case BrowserName.Firefox:\n                                    return <GuidancePrompt title=\"Ios Firefox guidance prompt\" onClose={onClose}>\n                                        <Typography>TODO</Typography>\n                                    </GuidancePrompt>;\n                                case BrowserName.Chrome:\n                                    return <GuidancePrompt title=\"Ios Chrome guidance prompt\" onClose={onClose}>\n                                        <Typography>TODO</Typography>\n                                    </GuidancePrompt>;\n                                case BrowserName.Safari:\n                                    return <GuidancePrompt title=\"Ios Safari guidance prompt\" onClose={onClose}>\n                                        <Typography>TODO</Typography>\n                                    </GuidancePrompt>;\n                                default:\n                                    return undefined;\n                            }\n                        default:\n                            switch (browserName) {\n                                case BrowserName.Firefox:\n                                    return <GuidancePrompt title=\"Android Firefox guidance prompt\" onClose={onClose}>\n                                        <Typography>TODO</Typography>\n                                    </GuidancePrompt>;\n                                case BrowserName.Opera:\n                                    return <GuidancePrompt title=\"Android Opera guidance prompt\" onClose={onClose}>\n                                        <Typography>TODO</Typography>\n                                    </GuidancePrompt>;\n                                default:\n                                    return undefined;\n                            }\n                    }\n                }}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}